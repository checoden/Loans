/**
 * Capacitor hooks script - –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ cap sync
 * –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –¥–æ–±–∞–≤–ª—è–µ—Ç POST_NOTIFICATIONS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
 */

const fs = require('fs');
const path = require('path');

module.exports = function(config) {
  return {
    'capacitor:sync:after': async () => {
      console.log('üîß Capacitor Hook: –î–æ–±–∞–≤–ª—è–µ–º POST_NOTIFICATIONS –ø–æ—Å–ª–µ sync...');
      
      const manifestPath = path.join(__dirname, 'capacitor-app', 'android', 'app', 'src', 'main', 'AndroidManifest.xml');
      
      if (!fs.existsSync(manifestPath)) {
        console.error('‚ùå Hook: AndroidManifest.xml –Ω–µ –Ω–∞–π–¥–µ–Ω:', manifestPath);
        return;
      }
      
      let manifest = fs.readFileSync(manifestPath, 'utf8');
      console.log('üìÑ Hook: –ß–∏—Ç–∞–µ–º –º–∞–Ω–∏—Ñ–µ—Å—Ç, —Ä–∞–∑–º–µ—Ä:', manifest.length);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      const pushPermissions = [
        'android.permission.POST_NOTIFICATIONS',
        'android.permission.WAKE_LOCK',
        'android.permission.VIBRATE',
        'android.permission.RECEIVE_BOOT_COMPLETED',
        'com.google.android.c2dm.permission.RECEIVE',
        'android.permission.ACCESS_NETWORK_STATE'
      ];
      
      let modified = false;
      
      pushPermissions.forEach(permission => {
        if (!manifest.includes(permission)) {
          console.log(`üì± Hook: –î–æ–±–∞–≤–ª—è–µ–º ${permission}`);
          manifest = manifest.replace(
            '</manifest>',
            `    <uses-permission android:name="${permission}" />\n</manifest>`
          );
          modified = true;
        } else {
          console.log(`‚úÖ Hook: ${permission} —É–∂–µ –µ—Å—Ç—å`);
        }
      });
      
      if (modified) {
        fs.writeFileSync(manifestPath, manifest);
        console.log('‚úÖ Hook: –ú–∞–Ω–∏—Ñ–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω —Å push-—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const updatedManifest = fs.readFileSync(manifestPath, 'utf8');
        if (updatedManifest.includes('POST_NOTIFICATIONS')) {
          console.log('‚úÖ Hook: POST_NOTIFICATIONS —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω');
        } else {
          console.error('‚ùå Hook: POST_NOTIFICATIONS –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è');
        }
      } else {
        console.log('‚úÖ Hook: –í—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
      }
    }
  };
};