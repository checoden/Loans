/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π Android –¥–ª—è push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥:
 * 1. npx cap add android
 * 2. npx cap sync android
 * 
 * –û–Ω –¥–æ–±–∞–≤–∏—Ç –∫–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ —Ñ–∞–π–ª MainActivity.java
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// ES –º–æ–¥—É–ª–∏ –Ω–µ –∏–º–µ—é—Ç __dirname, –ø–æ—ç—Ç–æ–º—É —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ Capacitor
const CAPACITOR_DIR = 'capacitor-app';

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–∞–∫–µ—Ç–∞ –≤ build.gradle –∏ AndroidManifest.xml
 */
function checkAndFixPackageId() {
  const expectedPackageId = 'ru.checoden.onlineloans';
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º build.gradle
  const buildGradlePath = path.join(CAPACITOR_DIR, 'android/app/build.gradle');
  if (fs.existsSync(buildGradlePath)) {
    let buildGradle = fs.readFileSync(buildGradlePath, 'utf8');
    
    // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å applicationId
    const applicationIdRegex = /applicationId "(.*?)"/;
    const match = buildGradle.match(applicationIdRegex);
    
    if (match && match[1] !== expectedPackageId) {
      console.log(`‚ö†Ô∏è –í build.gradle –æ–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π applicationId: ${match[1]}`);
      buildGradle = buildGradle.replace(
        applicationIdRegex,
        `applicationId "${expectedPackageId}"`
      );
      fs.writeFileSync(buildGradlePath, buildGradle);
      console.log(`‚úÖ applicationId –≤ build.gradle –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ "${expectedPackageId}"`);
    } else if (match) {
      console.log(`‚úÖ applicationId –≤ build.gradle —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ: ${match[1]}`);
    } else {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ applicationId –≤ build.gradle');
    }
  } else {
    console.error('‚ùå –§–∞–π–ª build.gradle –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ npx cap add android');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º AndroidManifest.xml
  const manifestPath = path.join(CAPACITOR_DIR, 'android/app/src/main/AndroidManifest.xml');
  if (fs.existsSync(manifestPath)) {
    let manifest = fs.readFileSync(manifestPath, 'utf8');
    
    // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å package
    const packageRegex = /package="(.*?)"/;
    const match = manifest.match(packageRegex);
    
    // –î–æ–±–∞–≤–ª—è–µ–º push-—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if (!manifest.includes('android.permission.POST_NOTIFICATIONS')) {
      console.log('‚öôÔ∏è –î–æ–±–∞–≤–ª—è–µ–º push-—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤ AndroidManifest.xml');
      const pushPermissions = `
    <!-- Push notification permissions -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />`;
      
      manifest = manifest.replace('</manifest>', pushPermissions + '\n</manifest>');
      fs.writeFileSync(manifestPath, manifest);
      console.log('‚úÖ Push-—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ AndroidManifest.xml');
    } else {
      console.log('‚úÖ Push-—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —É–∂–µ –µ—Å—Ç—å –≤ AndroidManifest.xml');
    }
    
    if (match && match[1] !== expectedPackageId) {
      console.log(`‚ö†Ô∏è –í AndroidManifest.xml –æ–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π package: ${match[1]}`);
      manifest = manifest.replace(
        packageRegex,
        `package="${expectedPackageId}"`
      );
      fs.writeFileSync(manifestPath, manifest);
      console.log(`‚úÖ package –≤ AndroidManifest.xml –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ "${expectedPackageId}"`);
    } else if (match) {
      console.log(`‚úÖ package –≤ AndroidManifest.xml —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ: ${match[1]}`);
    } else {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ package –≤ AndroidManifest.xml');
    }
  } else {
    console.error('‚ùå –§–∞–π–ª AndroidManifest.xml –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ npx cap add android');
  }
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è Android
 */
function setupNotificationChannel() {
  // –ü—É—Ç—å –∫ MainActivity.java –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è Android –ø—Ä–æ–µ–∫—Ç–∞
  const javaPackagePath = path.join(CAPACITOR_DIR, 'android/app/src/main/java/ru/checoden/onlineloans');
  const mainActivityPath = path.join(javaPackagePath, 'MainActivity.java');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª–∞
  if (!fs.existsSync(javaPackagePath)) {
    console.error('‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è Android –∫–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
    console.error(`–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: npx cap add android`);
    return false;
  }
  
  if (!fs.existsSync(mainActivityPath)) {
    console.error('‚ùå –§–∞–π–ª MainActivity.java –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    console.error(`–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ npx cap add android`);
    return false;
  }
  
  // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ MainActivity.java
  let javaCode = fs.readFileSync(mainActivityPath, 'utf8');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ –∫–æ–¥ –¥–ª—è –∫–∞–Ω–∞–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  if (javaCode.includes('NotificationChannel channel')) {
    console.log('‚úÖ –ö–æ–¥ –¥–ª—è –∫–∞–Ω–∞–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ MainActivity.java');
    return true;
  }
  
  console.log('üìù –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É—é —Ñ–∞–π–ª MainActivity.java...');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã, –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
  if (!javaCode.includes('import android.app.NotificationChannel;')) {
    javaCode = javaCode.replace(
      'import android.os.Bundle;', 
      'import android.os.Bundle;\nimport android.app.NotificationChannel;\nimport android.app.NotificationManager;\nimport android.content.Context;\nimport android.Manifest;\nimport android.content.pm.PackageManager;\nimport androidx.core.content.ContextCompat;\nimport androidx.core.app.ActivityCompat;'
    );
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –∑–∞–ø—Ä–æ—Å POST_NOTIFICATIONS –≤ –º–µ—Ç–æ–¥ onCreate
  javaCode = javaCode.replace(
    'public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);',
    `public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è OneSignal
    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
        NotificationChannel channel = new NotificationChannel(
            "–∑–∞–π–º—ã-–æ–Ω–ª–∞–π–Ω-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
            "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–π–º–∞—Ö",
            NotificationManager.IMPORTANCE_DEFAULT
        );
        channel.setDescription("–ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö –∑–∞–π–º–æ–≤");
        
        NotificationManager notificationManager = 
            (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
        notificationManager.createNotificationChannel(channel);
        
        System.out.println("–ö–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π '–∑–∞–π–º—ã-–æ–Ω–ª–∞–π–Ω-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' —Å–æ–∑–¥–∞–Ω");
    }
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ POST_NOTIFICATIONS –¥–ª—è Android 13+
    if (android.os.Build.VERSION.SDK_INT >= 33) {
        System.out.println("üîç Android –≤–µ—Ä—Å–∏—è: " + android.os.Build.VERSION.SDK_INT + " (—Ç—Ä–µ–±—É–µ—Ç—Å—è 33+)");
        int permissionCheck = ContextCompat.checkSelfPermission(this, Manifest.permission.POST_NOTIFICATIONS);
        System.out.println("üîç –°—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è POST_NOTIFICATIONS: " + permissionCheck + " (0=–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ, -1=–æ—Ç–∫–ª–æ–Ω–µ–Ω–æ)");
        
        if (permissionCheck != PackageManager.PERMISSION_GRANTED) {
            System.out.println("üöÄ –ó–ê–ü–†–ê–®–ò–í–ê–ï–ú —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ POST_NOTIFICATIONS –¥–ª—è Android 13+");
            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.POST_NOTIFICATIONS}, 1001);
        } else {
            System.out.println("‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ POST_NOTIFICATIONS —É–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ");
        }
    } else {
        System.out.println("‚ÑπÔ∏è Android –≤–µ—Ä—Å–∏—è " + android.os.Build.VERSION.SDK_INT + " - POST_NOTIFICATIONS –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è");
    }
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –ø–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è Android 13+ (API 33+)
    if (android.os.Build.VERSION.SDK_INT >= 33) {
        if (checkSelfPermission(android.Manifest.permission.POST_NOTIFICATIONS) != android.content.pm.PackageManager.PERMISSION_GRANTED) {
            System.out.println("–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ POST_NOTIFICATIONS –¥–ª—è Android 13+");
            requestPermissions(new String[] { android.Manifest.permission.POST_NOTIFICATIONS }, 100);
        } else {
            System.out.println("–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ POST_NOTIFICATIONS —É–∂–µ –ø–æ–ª—É—á–µ–Ω–æ");
        }
    }
    
    @Override
    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        System.out.println("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π - –∫–æ–¥: " + requestCode);
        
        if (requestCode == 1001) {
            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                System.out.println("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –†–ê–ó–†–ï–®–ò–õ POST_NOTIFICATIONS");
            } else {
                System.out.println("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –û–¢–ö–õ–û–ù–ò–õ POST_NOTIFICATIONS");
            }
        }
    }`
  );
  
  try {
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
    fs.writeFileSync(mainActivityPath, javaCode);
    console.log('‚úÖ –ö–æ–¥ –¥–ª—è –∫–∞–Ω–∞–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –∑–∞–ø—Ä–æ—Å POST_NOTIFICATIONS —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ MainActivity.java');
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª MainActivity.java:', error);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É
console.log('üîç –ü—Ä–æ–≤–µ—Ä—è—é –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É—é –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–∞–∫–µ—Ç–∞...');
checkAndFixPackageId();

console.log('\nüîî –ù–∞—á–∏–Ω–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∫–∞–Ω–∞–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è Android...');
if (setupNotificationChannel()) {
  console.log('\n‚úÖ –ö–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
  console.log('\nüì± –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–±–æ—Ä–∫—É APK:');
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Android Studio: npx cap open android');
  console.log('2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–±–æ—Ä–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (Build > Build Bundle(s) / APK(s) > Build APK(s))');
  
  console.log('\nüîî –í–∞–∂–Ω–æ! –î–ª—è —Ä–∞–±–æ—Ç—ã push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:');
  console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ google-services.json –≤ –ø–∞–ø–∫–µ capacitor-app —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π package_name: ru.checoden.onlineloans');
  console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è –≠–¢–û–ì–û –ø—Ä–æ–µ–∫—Ç–∞ –≤ Firebase Console –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ API-–∫–ª—é—á–∏');
} else {
  console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
  console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —à–∞–≥–∏:');
  console.log('1. node prepare-for-apk.js');
  console.log('2. cd capacitor-app && npm install');
  console.log('3. npx cap add android');
  console.log('4. npx cap sync android');
}