name: Build APK Simplified

on:
  push:
    tags: ['v*']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. Клонируем репозиторий
    - uses: actions/checkout@v4

    # 2. Устанавливаем Node.js
    - uses: actions/setup-node@v4
      with:
        node-version: '20'

    # 3. Устанавливаем Java 21 (для совместимости с Capacitor 7.2.0)
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    # 4. Установка зависимостей
    - run: npm ci

    # 5. Подготовка проекта для сборки APK
    - name: Prepare Capacitor project
      run: |
        # Подготовка проекта через скрипт
        node prepare-for-apk.js
        cd capacitor-app
        npm install
        rm -rf android
        npm install @capacitor/core@7.2.0 @capacitor/android@7.2.0
        npx cap add android || npm install @capacitor/core@7.2.0 @capacitor/android@7.2.0 && npx cap add android

        # Создаем AndroidManifest.xml с явным разрешением POST_NOTIFICATIONS
        mkdir -p android/app/src/main
        cat > android/app/src/main/AndroidManifest.xml << 'EOF'
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <!-- Разрешения для Android -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />

    <!-- Разрешение для уведомлений на Android 13+ -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" tools:targetApi="33" />

    <!-- Дополнительные разрешения для уведомлений -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />

    <application></application>
</manifest>
EOF

        # Копируем google-services.json
        if [ -f "../google-services.json" ]; then
          cp ../google-services.json android/app/google-services.json
        fi

        # Запускаем синхронизацию
        npx cap sync android

    # 6. Android SDK и Gradle setup
    - uses: android-actions/setup-android@v3
    - uses: gradle/gradle-build-action@v3
      with:
        gradle-version: 8.11

    # 7. Сборка APK
    - name: Build unsigned APK
      run: |
        cd capacitor-app/android
        ./gradlew assembleRelease

    # 8. Подписываем APK
    - name: Sign APK
      run: |
        echo "${{ secrets.KEYSTORE_B64 }}" | base64 -d > keystore.jks
        UNSIGNED=$(find capacitor-app/android/app/build/outputs/apk/release -name '*release-unsigned.apk' | head -n 1)
        
        if [ -z "$UNSIGNED" ]; then
          echo "APK file not found!"
          exit 1
        fi
        
        APKSIGNER="$ANDROID_HOME/build-tools/34.0.0/apksigner"
        $APKSIGNER sign \
          --ks keystore.jks \
          --ks-key-alias "${{ secrets.KEY_ALIAS }}" \
          --ks-pass pass:"${{ secrets.KEYSTORE_PASSWORD }}" \
          --key-pass pass:"${{ secrets.KEY_PASSWORD }}" \
          --out Loans-${{ github.ref_name }}.apk \
          $UNSIGNED
          
        # Проверяем наличие разрешения в APK
        echo "Проверяем наличие разрешения POST_NOTIFICATIONS в APK:"
        $ANDROID_HOME/build-tools/34.0.0/aapt dump permissions Loans-${{ github.ref_name }}.apk | grep POST_NOTIFICATIONS

    # 9. Публикуем APK
    - uses: actions/upload-artifact@v4
      with:
        name: apk
        path: Loans-*.apk
        
    # 10. Создаем GitHub Release
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: Loans-*.apk
        draft: false
        prerelease: false
        name: "Займы онлайн ${{ github.ref_name }}"
        body: |
          ### Займы онлайн (версия ${{ github.ref_name }})
          
          **Функциональность:**
          - Браузер займов с фильтрами
          - Админ-панель для управления займами
          - Push-уведомления через OneSignal (Android 13+)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}