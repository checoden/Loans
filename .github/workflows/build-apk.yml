        name: Build APK

        on:
          push:
            tags: ['v*']

        jobs:
          build:
            runs-on: ubuntu-latest

            steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                node-version: '20'

            - name: Set up JDK 21
              uses: actions/setup-java@v4
              with:
                distribution: 'temurin'
                java-version: '21'

            - name: Clear Gradle cache
              run: |
                rm -rf /home/runner/.gradle || true
                rm -rf ~/.gradle/wrapper/dists || true

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                path: |
                  ~/.npm
                  ~/.gradle/caches
                  ~/.gradle/wrapper
                  node_modules
                  capacitor-app/node_modules
                key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json', '**/*.gradle*', '**/gradle-wrapper.properties') }}
                restore-keys: |
                  ${{ runner.os }}-build-

            - run: npm ci

            - name: Setup OneSignal Environment
              run: |
                echo "VITE_ONESIGNAL_APP_ID=${{ secrets.ONESIGNAL_APP_ID }}" >> $GITHUB_ENV
                echo "VITE_ONESIGNAL_REST_API_KEY=${{ secrets.ONESIGNAL_REST_API_KEY }}" >> $GITHUB_ENV

            - name: Prepare Capacitor project
              run: |
                node prepare-for-apk.js
                cd capacitor-app
                npm install
                rm -rf android
                jq 'del(.dependencies."@capacitor/android") | del(.dependencies."@capacitor/core")' package.json > package.json.tmp
                mv package.json.tmp package.json
                npm install
                mkdir -p android/gradle/wrapper
                npm install @capacitor/core@7.2.0 @capacitor/android@7.2.0 --legacy-peer-deps

            - name: Add Android platform
              run: |
                cd capacitor-app
                npx cap add android || {
                  rm -rf android node_modules;
                  npm install;
                  npm install @capacitor/core@7.2.0 @capacitor/android@7.2.0 onesignal-cordova-plugin@5.2.13;
                  npx cap add android;
                }
                cp ../google-services.json android/app/google-services.json || true
                cp ../capacitor-app/android/app/src/main/AndroidManifest-template.xml android/app/src/main/AndroidManifest.xml || true
                npx cap sync android
                cd ..
                node setup-android-notification-channel.js
                cd capacitor-app
                chmod +x ./create-directories.sh
                ./create-directories.sh
                chmod +x ./add-notification-permission.sh
                ./add-notification-permission.sh
                node update-gradle-signing.js
                node update-android-plugin.js

            - uses: android-actions/setup-android@v3
            - uses: gradle/actions/setup-gradle@v3
              with:
                gradle-version: 8.5
                build-cache-enabled: true

            - name: Verify signing configuration
              run: |
                cd capacitor-app/android
                echo "=== Проверяем настройки подписи ==="
                grep -A 10 signingConfigs app/build.gradle || echo "signingConfigs не найден!"
                ls -la app/android-keystore.keystore || echo "Keystore не найден!"

            - name: Build APK
              env:
                KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
                KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
                KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
              run: |
                cd capacitor-app/android
                echo "=== Создаем keystore файл перед сборкой ==="
                mkdir -p app
                echo "${{ secrets.KEYSTORE_B64 }}" | base64 -d > app/android-keystore.keystore
                if [ ! -f "app/android-keystore.keystore" ]; then
                  echo "❌ Keystore не найден в app/"
                  exit 1
                fi
                echo "✅ Keystore файл готов для сборки"
                ./gradlew --no-daemon :app:assembleRelease --stacktrace

            - name: Find and rename APK
              run: |
                cd capacitor-app/android
                APK=$(find app/build/outputs/apk/release -name "*.apk" | grep -v unsigned | head -n 1)
                if [ -z "$APK" ]; then
                  echo "❌ APK не найден"
                  exit 1
                fi
                cp "$APK" "../../Loans-${{ github.ref_name }}.apk"
                ls -la "../../Loans-${{ github.ref_name }}.apk"

            - name: Display certificate fingerprint
              run: |
                echo "SHA1:"
                keytool -list -v -keystore capacitor-app/android/app/android-keystore.keystore -alias "${{ secrets.KEY_ALIAS }}" -storepass "${{ secrets.KEYSTORE_PASSWORD }}" | grep SHA1

            - name: Verify APK file
              run: |
                if [ ! -f "Loans-${{ github.ref_name }}.apk" ]; then
                  echo "❌ APK не найден!"
                  exit 1
                fi

            - uses: actions/upload-artifact@v4
              with:
                name: apk
                path: Loans-*.apk

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              if: startsWith(github.ref, 'refs/tags/')
              with:
                files: Loans-*.apk
                draft: false
                prerelease: false
                name: "Займы онлайн ${{ github.ref_name }}"
                body: |
                  ### Займы онлайн (версия ${{ github.ref_name }})
                  - Браузер займов с фильтрами
                  - Админ-панель
                  - Push через OneSignal
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
