/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Gradle Wrapper –¥–æ –≤–µ—Ä—Å–∏–∏ 8.3, —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–π —Å Java 17
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è npx cap add android
 * –û–Ω –∏–∑–º–µ–Ω—è–µ—Ç —Ñ–∞–π–ª gradle-wrapper.properties –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Gradle 8.3
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// ES –º–æ–¥—É–ª–∏ –Ω–µ –∏–º–µ—é—Ç __dirname, –ø–æ—ç—Ç–æ–º—É —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ Capacitor
const CAPACITOR_DIR = 'capacitor-app';
const GRADLE_WRAPPER_PATH = path.join(CAPACITOR_DIR, 'android/gradle/wrapper/gradle-wrapper.properties');

// –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏—é Gradle –¥–æ 8.3, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Java 17
function updateGradleVersion() {
  console.log('üîç –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ Gradle –¥–ª—è Android...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    const wrapperDir = path.dirname(GRADLE_WRAPPER_PATH);
    if (!fs.existsSync(wrapperDir)) {
      console.log(`üìÇ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: ${wrapperDir}`);
      fs.mkdirSync(wrapperDir, { recursive: true });
    }
    
    // –°–æ–∑–¥–∞–µ–º/–∑–∞–º–µ–Ω—è–µ–º —Ñ–∞–π–ª —Å–≤–æ–π—Å—Ç–≤ –≥—Ä–∞–¥–ª–∞
    const gradleWrapperContent = `distributionBase=GRADLE_USER_HOME
distributionPath=wrapper/dists
distributionUrl=https\\://services.gradle.org/distributions/gradle-8.3-bin.zip
networkTimeout=10000
zipStoreBase=GRADLE_USER_HOME
zipStorePath=wrapper/dists
`;
    
    fs.writeFileSync(GRADLE_WRAPPER_PATH, gradleWrapperContent);
    console.log('‚úÖ Gradle Wrapper –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ –≤–µ—Ä—Å–∏–∏ 8.3 (—Å–æ–≤–º–µ—Å—Ç–∏–º–æ–π —Å Java 17)');
    
    // –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º build.gradle, –µ—Å–ª–∏ –æ–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É Java 17
    const buildGradlePath = path.join(CAPACITOR_DIR, 'android/build.gradle');
    if (fs.existsSync(buildGradlePath)) {
      let buildGradle = fs.readFileSync(buildGradlePath, 'utf8');
      
      // –ó–∞–º–µ–Ω—è–µ–º –≤–µ—Ä—Å–∏—é Gradle, –µ—Å–ª–∏ –æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞
      if (buildGradle.includes('com.android.tools.build:gradle:')) {
        buildGradle = buildGradle.replace(
          /com\.android\.tools\.build:gradle:[0-9.]+/,
          'com.android.tools.build:gradle:8.1.0'
        );
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º —è–≤–Ω–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Java 17, –µ—Å–ª–∏ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ
      if (!buildGradle.includes('JavaVersion.VERSION_17')) {
        const compileOptions = `
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlin {
        jvmToolchain(17)
    }`;
        
        // –ò—â–µ–º, –≥–¥–µ –¥–æ–±–∞–≤–∏—Ç—å –æ–ø—Ü–∏–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
        const allProjectsIndex = buildGradle.indexOf('allprojects {');
        if (allProjectsIndex !== -1) {
          // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –±–ª–æ–∫–∞ allprojects
          const closingBracket = buildGradle.indexOf('}', allProjectsIndex);
          if (closingBracket !== -1) {
            buildGradle = 
              buildGradle.slice(0, closingBracket + 1) + 
              compileOptions + 
              buildGradle.slice(closingBracket + 1);
          }
        }
      }
      
      fs.writeFileSync(buildGradlePath, buildGradle);
      console.log('‚úÖ Build Gradle –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Java 17');
    }
    
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ Gradle:', error);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
updateGradleVersion();